# Taken from multi-ghc-travis
# NB: don't set `language: haskell` here

# Explicitly request container-based infrastructure
sudo: false

# The build matrix.
matrix:
  # Builds finish as soon as a job has failed, or when the only jobs left allow faliures.
  fast_finish: true

  # Enable different GHC versions, and install them from the hvr PPA using apt.
  include:
    - env: CABALVER=1.18 GHCVER=7.6.3
      addons:
        apt:
          sources: [hvr-ghc, chris-lea-zeromq]
          packages:
            - cabal-install-1.18
            - ghc-7.6.3
            - happy
            - alex
            - libmagic-dev
            - python3
            - zeromq3
    - env: CABALVER=1.18 GHCVER=7.8.4
      addons:
        apt:
          sources: [hvr-ghc, chris-lea-zeromq]
          packages:
            - cabal-install-1.18
            - ghc-7.8.4
            - happy-1.19.4
            - alex-3.1.3
            - libmagic-dev
            - python3
            - zeromq3
    - env: CABALVER=1.22 GHCVER=7.10.1
      addons:
        apt:
          sources: [hvr-ghc, chris-lea-zeromq]
          packages:
            - cabal-install-1.22
            - ghc-7.10.1
            - happy-1.19.4
            - alex-3.1.3
            - libmagic-dev
            - python3
            - zeromq3
    - env: CABALVER=1.22 GHCVER=7.10.2
      addons:
        apt:
          sources: [hvr-ghc, chris-lea-zeromq]
          packages:
            - cabal-install-1.22
            - ghc-7.10.2
            - happy-1.19.4
            - alex-3.1.3
            - libmagic-dev
            - python3
            - zeromq3

# Stuff to cache between builds. Saving just the tarballs, might speed things up a little.
cache:
  directories:
    - $HOME/.cabal/packages

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.cabal/bin:$PATH
 - |
   if [ $GHCVER = "head" ] || [ ${GHCVER%.*} = "7.8" ] || [ ${GHCVER%.*} = "7.10" ]; then
     export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.4/bin:$PATH
   fi

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - travis_retry cabal install cpphs
 - travis_retry cabal install gtk2hs-buildtools
 - |
   if [ ${GHCVER%.*} = "7.8" ]; then
     travis_retry cabal install arithmoi==0.4.* -fllvm
     travis_retry git clone http://www.github.com/gibiansky/hindent
     cd hindent && travis_retry cabal install && cd ..
   fi

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - |
   if [ ${GHCVER%.*} = "7.8" ]; then
     travis_retry ./build.sh all
   elif [ ${GHCVER%.*} = "7.10" ]; then
     travis_retry ./build.sh all no-widgets
   else
     travis_retry ./build.sh ihaskell
   fi

# Build and run the test suite
 - travis_retry cabal install --only-dependencies --enable-tests
 - travis_retry cabal configure --enable-tests
 - |
   if [ ${GHCVER%.*} = "7.8" ]; then
    travis_retry cabal test --show-details=always
   fi
 - |
   if [ ${GHCVER%.*} = "7.8" ]; then
    ./verify_formatting.py
   fi
 - cabal sdist

# The following scriptlet checks that the resulting source distribution can be built & installed
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
